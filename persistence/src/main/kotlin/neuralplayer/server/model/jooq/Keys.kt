/*
 * This file is generated by jOOQ.
 */
package neuralplayer.server.model.jooq

import neuralplayer.server.model.jooq.tables.*
import neuralplayer.server.model.jooq.tables.records.*
import org.jooq.ForeignKey
import org.jooq.Identity
import org.jooq.UniqueKey
import org.jooq.impl.Internal

import javax.annotation.Generated

/**
 * A class modelling foreign key relationships and constraints of tables of
 * the `neural_player` schema.
 */
@Generated(value = ["http://www.jooq.org", "jOOQ version:3.11.2"], comments = "This class is generated by jOOQ")
object Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	val IDENTITY_PLAYLIST = Identities0.IDENTITY_PLAYLIST
	val IDENTITY_TRACK = Identities0.IDENTITY_TRACK
	val IDENTITY_USER = Identities0.IDENTITY_USER

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	val KEY_PLAYLIST_PRIMARY = UniqueKeys0.KEY_PLAYLIST_PRIMARY
	val KEY_PLAYLIST_TRACK_PRIMARY = UniqueKeys0.KEY_PLAYLIST_TRACK_PRIMARY
	val KEY_TRACK_PRIMARY = UniqueKeys0.KEY_TRACK_PRIMARY
	val KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY
	val KEY_USER_USER_NAME_UNIQUE = UniqueKeys0.KEY_USER_USER_NAME_UNIQUE
	val KEY_USER_USER_EMAIL_UNIQUE = UniqueKeys0.KEY_USER_USER_EMAIL_UNIQUE
	val KEY_USER_TRACK_PRIMARY = UniqueKeys0.KEY_USER_TRACK_PRIMARY

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	val PLAYLIST_CREATOR_ID_FK = ForeignKeys0.PLAYLIST_CREATOR_ID_FK
	val PLAYLIST_TRACK_PLAYLIST_ID_FK = ForeignKeys0.PLAYLIST_TRACK_PLAYLIST_ID_FK
	val PLAYLIST_TRACK_TRACK_ID_FK = ForeignKeys0.PLAYLIST_TRACK_TRACK_ID_FK
	val USER_TRACK_USER_ID_FK = ForeignKeys0.USER_TRACK_USER_ID_FK
	val USER_TRACK_TRACK_ID_FK = ForeignKeys0.USER_TRACK_TRACK_ID_FK

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private object Identities0 {
		var IDENTITY_PLAYLIST = Internal.createIdentity(Playlist.PLAYLIST, Playlist.PLAYLIST.ID)
		var IDENTITY_TRACK = Internal.createIdentity(Track.TRACK, Track.TRACK.ID)
		var IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID)
	}

	private object UniqueKeys0 {
		val KEY_PLAYLIST_PRIMARY = Internal.createUniqueKey(Playlist.PLAYLIST, "KEY_playlist_PRIMARY", Playlist.PLAYLIST.ID)
		val KEY_PLAYLIST_TRACK_PRIMARY = Internal.createUniqueKey(PlaylistTrack.PLAYLIST_TRACK, "KEY_playlist_track_PRIMARY", PlaylistTrack.PLAYLIST_TRACK.PLAYLIST_ID, PlaylistTrack.PLAYLIST_TRACK.TRACK_ID)
		val KEY_TRACK_PRIMARY = Internal.createUniqueKey(Track.TRACK, "KEY_track_PRIMARY", Track.TRACK.ID)
		val KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID)
		val KEY_USER_USER_NAME_UNIQUE = Internal.createUniqueKey(User.USER, "KEY_user_user_name_unique", User.USER.USERNAME)
		val KEY_USER_USER_EMAIL_UNIQUE = Internal.createUniqueKey(User.USER, "KEY_user_user_email_unique", User.USER.EMAIL)
		val KEY_USER_TRACK_PRIMARY = Internal.createUniqueKey(UserTrack.USER_TRACK, "KEY_user_track_PRIMARY", UserTrack.USER_TRACK.USER_ID, UserTrack.USER_TRACK.TRACK_ID)
	}

	private object ForeignKeys0 {
		val PLAYLIST_CREATOR_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Playlist.PLAYLIST, "playlist_creator_id_fk", Playlist.PLAYLIST.CREATOR_ID)
		val PLAYLIST_TRACK_PLAYLIST_ID_FK = Internal.createForeignKey(Keys.KEY_PLAYLIST_PRIMARY, PlaylistTrack.PLAYLIST_TRACK, "playlist_track_playlist_id_fk", PlaylistTrack.PLAYLIST_TRACK.PLAYLIST_ID)
		val PLAYLIST_TRACK_TRACK_ID_FK = Internal.createForeignKey(Keys.KEY_TRACK_PRIMARY, PlaylistTrack.PLAYLIST_TRACK, "playlist_track_track_id_fk", PlaylistTrack.PLAYLIST_TRACK.TRACK_ID)
		val USER_TRACK_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserTrack.USER_TRACK, "user_track_user_id_fk", UserTrack.USER_TRACK.USER_ID)
		val USER_TRACK_TRACK_ID_FK = Internal.createForeignKey(Keys.KEY_TRACK_PRIMARY, UserTrack.USER_TRACK, "user_track_track_id_fk", UserTrack.USER_TRACK.TRACK_ID)
	}
}
