/*
 * This file is generated by jOOQ.
 */
package neuralplayer.server.model.jooq

import neuralplayer.server.model.jooq.tables.*
import org.jooq.Catalog
import org.jooq.Table
import org.jooq.example.gradle.db.DefaultCatalog
import org.jooq.impl.SchemaImpl

import javax.annotation.Generated
import java.util.ArrayList
import java.util.Arrays

/**
 * This class is generated by jOOQ.
 */
@Generated(value = ["http://www.jooq.org", "jOOQ version:3.11.2"], comments = "This class is generated by jOOQ")
class NeuralPlayer
/**
 * No further instances allowed
 */
private constructor() : SchemaImpl("neural_player", null) {

	/**
	 * The table `neural_player.playlist`.
	 */
	val PLAYLIST = Playlist.PLAYLIST

	/**
	 * The table `neural_player.playlist_track`.
	 */
	val PLAYLIST_TRACK = PlaylistTrack.PLAYLIST_TRACK

	/**
	 * The table `neural_player.track`.
	 */
	val TRACK = Track.TRACK

	/**
	 * The table `neural_player.user`.
	 */
	val USER = User.USER

	/**
	 * The table `neural_player.user_track`.
	 */
	val USER_TRACK = UserTrack.USER_TRACK

	private val tables0: List<Table<*>>
		get() = Arrays.asList<Table<*>>(
				Playlist.PLAYLIST,
				PlaylistTrack.PLAYLIST_TRACK,
				Track.TRACK,
				User.USER,
				UserTrack.USER_TRACK)


	/**
	 * {@inheritDoc}
	 */
	override fun getCatalog(): Catalog {
		return DefaultCatalog.DEFAULT_CATALOG
	}

	override fun getTables(): List<Table<*>> {
		val result = ArrayList<Table<*>>()
		result.addAll(tables0)
		return result
	}

	companion object {

		private val serialVersionUID: Long = -508449038

		/**
		 * The reference instance of `neural_player`
		 */
		val NEURAL_PLAYER = NeuralPlayer()
	}
}
